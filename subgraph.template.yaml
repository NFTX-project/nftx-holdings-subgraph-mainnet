specVersion: 0.0.4
description: Explore all NFTX Vault tokens
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: NFTXVaultFactoryUpgradeable
    network: {{network}}
    source:
      address: '{{addressVaultFactory}}'
      abi: NFTXVaultFactoryUpgradeable
      startBlock: {{startBlockNFTXFactory}}
    mapping:
      file: ./src/mappings/vault.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./abis/NFTXFeeDistributor.json
        - name: IERC20
          file: ./node_modules/@openzeppelin/contracts/build/contracts/IERC20Metadata.json
      eventHandlers:
        - event: NewVault(indexed uint256,address,address)
          handler: handleNewVault
        - event: NewFeeDistributor(address,address)
          handler: handleNewFeeDistributor
  - kind: ethereum/contract
    name: NFTXInventoryStaking
    network: {{network}}
    source:
      abi: NFTXInventoryStaking
      address: '{{addressInventoryStaking}}'
      startBlock: {{startBlockInventoryStaking}}
    mapping:
      file: ./src/mappings/inventoryStaking.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: NFTXInventoryStaking
          file: ./abis/NFTXInventoryStaking.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
      eventHandlers:
        - event: XTokenCreated(uint256,address,address)
          handler: handleXTokenCreated
        - event: Deposit(uint256,uint256,uint256,uint256,address)
          handler: handleXTokenDeposited
        - event: Withdraw(uint256,uint256,uint256,address)
          handler: handleXTokenWithdrawn
  - kind: ethereum/contract
    name: NFTXStakingZap
    network: {{network}}
    source:
      address: '{{addressStakingZap}}'
      abi: NFTXStakingZap
      startBlock: {{startBlockZaps}}
    mapping:
      file: ./src/mappings/pairs.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Zap
      abis:
        - name: NFTXStakingZap
          file: ./abis/NFTXStakingZap.json
        - name: Factory
          file: ./node_modules/@sushiswap/core/build/abi/UniswapV2Factory.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
        - name: StakingTokenProvider
          file: ./abis/StakingTokenProvider.json
      eventHandlers:
        - event: UserStaked(uint256,uint256,uint256,uint256,address)
          handler: handleVaultTokenWETHPairCreation
  - kind: ethereum/contract
    name: NFTXStakingZapV2
    network: {{network}}
    source:
      address: '{{addressStakingZapV2}}'
      abi: NFTXStakingZap
      startBlock: {{startBlockZapsV2}}
    mapping:
      file: ./src/mappings/pairs.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Zap
      abis:
        - name: NFTXStakingZap
          file: ./abis/NFTXStakingZap.json
        - name: Factory
          file: ./node_modules/@sushiswap/core/build/abi/UniswapV2Factory.json
        - name: StakingTokenProvider
          file: ./abis/StakingTokenProvider.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
      eventHandlers:
        - event: UserStaked(uint256,uint256,uint256,uint256,address)
          handler: handleVaultTokenWETHPairCreation
  - kind: ethereum/contract
    name: NFTXLPStaking
    network: {{network}}
    source:
      address: '{{lpStaking}}'
      abi: NFTXLPStaking
      startBlock: {{startBlockNFTXFactory}}
    mapping:
      file: ./src/mappings/pairs.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: NFTXLPStaking
          file: ./abis/NFTXLPStaking.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
        - name: StakingTokenProvider
          file: ./abis/StakingTokenProvider.json
      eventHandlers:
        - event: PoolCreated(uint256,address)
          handler: handlePoolCreated
        - event: Deposit(uint256,address,uint256,address,uint256)
          handler: handleDeposit
        - event: PoolUpdated(uint256,address)
          handler: handlePoolUpdated
templates:
  - kind: ethereum/contract
    name: Token
    network: {{network}}
    source:
      abi: IERC20
    mapping:
      file: ./src/mappings/erc20/datasource.ts
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ERC20Contract
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXVaultUpgradeable
          file: ./abis/NFTXVaultUpgradeable.json
        - name: XTokenUpgradeable
          file: ./abis/XTokenUpgradeable.json
        - name: StakingTokenProvider
          file: ./abis/StakingTokenProvider.json
        - name: IERC20
          file: ./node_modules/@openzeppelin/contracts/build/contracts/IERC20Metadata.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Transfer(indexed address,indexed address,uint256)
          topic0: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
          handler: handleTransfer
